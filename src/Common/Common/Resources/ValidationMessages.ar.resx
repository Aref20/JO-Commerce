<?xml version="1.0" encoding="utf-8" ?>
<root>
    <!--
      Microsoft ResX Schema

      Version 2.0

      The primary goals of this format is to allow a simple XML format
      that is mostly human readable. The generation and parsing of the
      various data types are done through the TypeConverter classes
      associated with the data types.

      Example:

      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>

      There are any number of "resheader" rows that contain simple
      name/value pairs.

      Each data row contains a name, and value. The row also contains a
      type or mimetype. Type corresponds to a .NET class that support
      text/value conversion through the TypeConverter architecture.
      Classes that don't support this are serialized and stored with the
      mimetype set.

      The mimetype is used for serialized objects, and tells the
      ResXResourceReader how to depersist the object. This is currently not
      extensible. For a given mimetype the value must be set accordingly:

      Note - application/x-microsoft.net.object.binary.base64 is the format
      that the ResXResourceWriter will generate, however the reader can
      read any of the formats listed below.

      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.

      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.

      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="PriceMustBePositive" xml:space="preserve">
    <value>يجب أن يكون السعر أكبر من صفر</value>
  </data>
    <data name="ProductIdRequired" xml:space="preserve">
    <value>معرف المنتج مطلوب</value>
  </data>
    <data name="ProductNameRequired1" xml:space="preserve">
    <value>اسم المنتج مطلوب</value>
  </data>
    <data name="ProductNameTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز اسم المنتج 100 حرف</value>
  </data>
    <data name="SKURequired" xml:space="preserve">
    <value>رمز SKU مطلوب</value>
  </data>
    <data name="SKUTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز رمز SKU 50 حرف</value>
  </data>
    <data name="StockCannotBeNegative" xml:space="preserve">
    <value>لا يمكن أن تكون كمية المخزون سالبة</value>
  </data>
    <data name="TagNameRequired" xml:space="preserve">
    <value>اسم الوسم مطلوب</value>
  </data>
    <data name="TagNameTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز اسم الوسم 100 حرف</value>
  </data>
    <data name="SlugRequired" xml:space="preserve">
    <value>الرابط الثابت مطلوب</value>
  </data>
    <data name="SlugTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز الرابط الثابت 100 حرف</value>
  </data>
    <data name="SlugInvalidFormat" xml:space="preserve">
    <value>يمكن أن يحتوي الرابط الثابت فقط على أحرف صغيرة وأرقام وشرطات</value>
</data>
    <data name="TagNameRequired" xml:space="preserve">
    <value>اسم الوسم مطلوب</value>
  </data>
    <data name="TagNameTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز اسم الوسم 100 حرف</value>
  </data>
    <data name="SlugRequired" xml:space="preserve">
    <value>الرابط الثابت مطلوب</value>
  </data>
    <data name="SlugTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز الرابط الثابت 100 حرف</value>
  </data>
    <data name="SlugInvalidFormat" xml:space="preserve">
    <value>يمكن أن يحتوي الرابط الثابت فقط على أحرف صغيرة وأرقام وشرطات</value>
  </data>
    <data name="TaxClassNameRequired" xml:space="preserve">
    <value>اسم الفئة الضريبية مطلوب</value>
  </data>
    <data name="TaxClassNameTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز اسم الفئة الضريبية 100 حرف</value>
  </data>
    <data name="TaxClassDescriptionTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز وصف الفئة الضريبية 500 حرف</value>
  </data>
    <data name="TaxClassNameRequired" xml:space="preserve">
    <value>اسم الفئة الضريبية مطلوب</value>
  </data>
    <data name="TaxClassNameTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز اسم الفئة الضريبية 100 حرف</value>
  </data>
    <data name="TaxClassDescriptionTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز وصف الفئة الضريبية 500 حرف</value>
  </data>
    <data name="CountryCodeRequired" xml:space="preserve">
    <value>رمز الدولة مطلوب</value>
  </data>
    <data name="CountryCodeLength" xml:space="preserve">
    <value>يجب أن يتكون رمز الدولة من حرفين</value>
  </data>
    <data name="StateCodeTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز رمز الولاية حرفين</value>
  </data>
    <data name="PostalCodeTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز الرمز البريدي 10 أحرف</value>
  </data>
    <data name="RateNegative" xml:space="preserve">
    <value>لا يمكن أن تكون نسبة الضريبة سالبة</value>
  </data>
    <data name="RateTooHigh" xml:space="preserve">
    <value>لا يمكن أن تزيد نسبة الضريبة عن 100</value>
  </data>
    <data name="TaxClassRequired" xml:space="preserve">
    <value>فئة الضريبة مطلوبة</value>
  </data>
    <data name="CountryCodeRequired" xml:space="preserve">
    <value>رمز الدولة مطلوب</value>
  </data>
    <data name="CountryCodeLength" xml:space="preserve">
    <value>يجب أن يتكون رمز الدولة من حرفين</value>
  </data>
    <data name="StateCodeTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز رمز الولاية حرفين</value>
  </data>
    <data name="PostalCodeTooLong" xml:space="preserve">
    <value>لا يمكن أن يتجاوز الرمز البريدي 10 أحرف</value>
  </data>
    <data name="RateNegative" xml:space="preserve">
    <value>لا يمكن أن تكون نسبة الضريبة سالبة</value>
  </data>
    <data name="RateTooHigh" xml:space="preserve">
    <value>لا يمكن أن تزيد نسبة الضريبة عن 100</value>
  </data>
    <data name="TaxClassRequired" xml:space="preserve">
    <value>فئة الضريبة مطلوبة</value>
  </data>
</root>